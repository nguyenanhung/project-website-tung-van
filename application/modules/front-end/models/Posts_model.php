<?php defined('BASEPATH') OR exit('No direct script access allowed');
/**
 * Created by PhpStorm.
 * User: HongLT
 * Date: 4/07/2017
 * Time: 9:55 AM
 */
require_once APPPATH . 'core/TD_VAS_Based_model.php';
class Posts_model extends TD_VAS_Based_model
{
    public function __construct()
    {
        parent::__construct();
        $this->db                = $this->load->database('default', TRUE, TRUE);
        $this->tableName         = 'posts';
        $this->primary_key       = 'id';
        $this->field_status      = 'status';
        $this->field_name        = 'name';
        $this->field_type        = 'type';
        $this->field_categories  = 'categories';
        $this->field_slugs       = 'slugs';
        $this->field_photo       = 'photo';
        $this->field_thumb       = 'thumb';
        $this->field_summary     = 'summary';
        $this->field_content     = 'content';
        $this->field_title       = 'title';
        $this->field_description = 'description';
        $this->field_viewed      = 'viewed';
        $this->field_source      = 'source';
        $this->field_created_at  = 'created_at';
        $this->field_updated_at  = 'updated_at';
        $this->field_comment     = 'comment';
        $this->field_show_slider = 'show_slider';
        $this->is_not            = ' !=';
        $this->or_higher         = ' >=';
        $this->is_higher         = ' >';
        $this->or_smaller        = ' <=';
        $this->is_smaller        = ' <';
    }

    /**
     * Get Results
     *
     * @param int $size
     * @param int $page
     * @param string $begin_date
     * @param string $end_date
     * @param null $username
     * @param null $level
     * @param bool $count_result
     * @param bool $random
     * @return mixed
     */
    public function get_list_result($size = 5, $page = 0, $hot_result = false, $random = false, $count_result = false)
    {
        $this->db->select('
            categories.id as cat_id,
            categories.name as cat_name,
            categories.slugs as cat_slugs,
            categories.title as cat_title,
            posts.id as post_id,
            posts.photo as photos,
            posts.thumb as thumbnail,
            posts.name as name,
            posts.slugs as slugs,
            posts.summary as summary,
            posts.title as title,
            posts.created_at as created_at,
            posts.updated_at as updated_at
            ');
        $this->db->from($this->tableName);
        $this->db->join('categories', 'categories.id = posts.categories');
        // GET if status = active
        $this->db->where($this->tableName . '.' . $this->field_status, '1');
        // GET if HOT
        if ($hot_result === true)
        {
            $this->db->where($this->tableName . '.' . $this->field_type, '2');
        }
        /** @var Filter count result */
        if ($count_result === false)
        {
            // Limit Result
            self::_page_limit($size, $page);
            // Order Result
            if ($random === true)
            {
                $this->db->order_by($this->tableName . '.' . $this->primary_key, 'RANDOM');
            }
            else
            {
                $this->db->order_by($this->tableName . '.' . $this->primary_key, 'DESC');
            }
            // Genarate result
            return $this->db->get()->result();
        }
        else
        {
            return $this->db->count_all_results();
        }
    }
    public function get_result_distinct($field = null)
    {
        $this->db->distinct();
        $this->db->select($field);
        $this->db->from($this->tableName);
        return $this->db->get()->result();
    }

    public function get_value($value_input = '', $field_input = null, $field_output = null)
    {
        return parent::get_value($value_input, $field_input, $field_output); // TODO: Change the autogenerated stub
    }
    /**
     * get_info_post
     *
     * @return null if not
     * @access      public
     * @author 		Hung Nguyen <dev@nguyenanhung.com>
     * @version     1.0.1
     * @since       30/12/2016
     */
    public function get_info_post($value = '', $field = null)
    {
        $this->db->select('
            categories.id as cat_id,
            categories.name as cat_name,
            categories.slugs as cat_slugs,
            categories.title as cat_title,
            posts.id as id,
            posts.id as post_id,
            posts.photo as photo,
            posts.thumb as thumbnail,
            posts.name as name,
            posts.slugs as slugs,
            posts.summary as summary,
            posts.content as content,
            posts.title as title,
            posts.tags as tags,
            posts.description as description,
            posts.created_at as created_at,
            posts.updated_at as updated_at,
            posts.comment as comment
            ');
        $this->db->from($this->tableName);
        $this->db->join('categories', 'categories.id = posts.categories');
        if (null === $field)
        {
            $this->db->where($this->tableName . '.' . $this->primary_key, $value);
        }
        else
        {
            $this->db->where($this->tableName . '.' . $field, $value);
        }
        return $this->db->get()->row();
    }

    /**
     * get_item_related
     *
     * @return mixed
     * @author Hung Nguyen <dev@nguyenanhung.com>
     * @version 1.0.0
     * @since   29/12/2016
     */
    public function get_item_related($size = 4, $page = 0, $post_id = '', $categories = null)
    {
        if ($categories === null)
        {
            return null;
        }
        $this->db->select('
            categories.id as cat_id,
            categories.name as cat_name,
            categories.slugs as cat_slugs,
            categories.title as cat_title,
            posts.id as post_id,
            posts.photo as photos,
            posts.thumb as thumbnail,
            posts.name as name,
            posts.slugs as slugs,
            posts.summary as summary,
            posts.title as title,
            posts.created_at as created_at,
            posts.updated_at as updated_at,
            posts.comment as comment
            ');
        $this->db->from($this->tableName);
        $this->db->join('categories', 'categories.id = posts.categories');
        // Filter Categories
        if (is_array($categories))
        {
            $this->db->where_in($this->tableName . '.' . $this->field_categories, $categories);
        }
        else
        {
            $this->db->where($this->tableName . '.' . $this->field_categories, $categories);
        }
        // GET item is not item
        $this->db->where($this->tableName . '.' . $this->primary_key . $this->is_not, $post_id);
        // GET if status = active
        $this->db->where($this->tableName . '.' . $this->field_status, '1');
        // Order Result
        $this->db->order_by($this->tableName . '.' . $this->field_created_at, 'DESC');
        // Limit Result
        self::_page_limit($size, $page);
        // Genarate result
        return $this->db->get()->result();
    }
    public function get_recent_post($size = 3, $page = 1, $menu_slugs = '', $show_slider = false)
    {
        $this->db->select('
            categories.id as cat_id,
            categories.name as cat_name,
            categories.slugs as cat_slugs,
            categories.title as cat_title,
            posts.id as post_id,
            posts.photo as photos,
            posts.thumb as thumbnail,
            posts.name as name,
            posts.slugs as slugs,
            posts.summary as summary,
            posts.title as title,
            posts.created_at as created_at,
            posts.updated_at as updated_at,
            posts.comment as comment
            ');
        $this->db->join('categories', 'categories.id = posts.categories');
        $this->db->join('menu', 'menu.id = categories.menu_id');
        // GET if status = active
        $this->db->where($this->tableName . '.' . $this->field_status, '1');
        if ($menu_slugs != null) {
            $this->db->where('menu.slugs',$menu_slugs); // chọn posts tin tức
        }
        // GET if show_slider = active
        if ($show_slider == true) {
            $this->db->where($this->tableName .'.'. $this->field_show_slider, 1);
        }
        $this->db->from($this->tableName);
        $this->db->order_by($this->field_created_at,"DESC");
        self::_page_limit($size, $page);

            // Genarate result
        return $this->db->get()->result();
        
    }
    public function get_tags($size = 5, $page = 1)
    {
        $this->db->select('
            tags
            ');
        $this->db->from($this->tableName);
        $this->db->order_by($this->field_viewed, 'DESC');
        self::_page_limit($size, $page);

        return $this->db->get()->result();
    }
    public function get_result($limit = 5, $start = 0, $menu = null, $categories = null)
    {
        $this->db->select('
            categories.id as cat_id,
            categories.name as cat_name,
            categories.slugs as cat_slugs,
            categories.title as cat_title,
            posts.id as post_id,
            posts.photo as photos,
            posts.thumb as thumbnail,
            posts.name as name,
            posts.slugs as slugs,
            posts.summary as summary,
            posts.title as title,
            posts.created_at as created_at,
            posts.updated_at as updated_at,
            posts.comment as comment
        ');
        $this->db->from($this->tableName);
        $this->db->join('categories', 'categories.id = posts.categories');
        $this->db->join('menu', 'menu.id = categories.menu_id');
        if ($menu != null) {
            $this->db->where('menu.slugs',$menu); // chọn posts tin tức
        } 
        if ($categories) {
            if (is_array($categories))
            {
                $this->db->where_in($this->tableName . '.' . $this->field_categories, $categories);
            }
            else
            {
                $this->db->where($this->tableName . '.' . $this->field_categories, $categories);
            }
        }
        // GET if status = active
        $this->db->where($this->tableName . '.' . $this->field_status, '1');
        $this->db->order_by($this->tableName . '.id', 'DESC');
        $this->db->limit($limit,$start);
        return $this->db->get()->result();
    }

    public function count_news_post($menu = null, $categories = null)
    {
        $this->db->from($this->tableName);
        $this->db->join('categories', 'categories.id = posts.categories');
        $this->db->join('menu', 'menu.id = categories.menu_id');
        if ($menu != null) {
            $this->db->where('menu.slugs',$menu); // chọn posts tin tức
        }
        if ($categories) {
            if (is_array($categories))
            {
                $this->db->where_in($this->tableName . '.' . $this->field_categories, $categories);
            }
            else
            {
                $this->db->where($this->tableName . '.' . $this->field_categories, $categories);
            }
        }
        // GET if status = active
        $this->db->where($this->tableName . '.' . $this->field_status, '1');
        return $this->db->count_all_results();
    }   
}
